---
services:
  - docker
sudo: required

# env:
#   - container_id: $(mktemp)
#     distribution: centos
#     version: 7
#     init: /usr/lib/systemd/systemd
#     run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
#   - container_id: $(mktemp)
#     distribution: debian
#     version: 8
#     init: /lib/systemd/systemd
#     run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

env:
  # https://en.wikipedia.org/wiki/CentOS#Versioning_and_releases
  - distribution: centos
    version: 8
  - distribution: centos
    version: 7
  # https://en.wikipedia.org/wiki/Fedora_(operating_system)#Releases
  - distribution: fedora
    version: 32
  - distribution: fedora
    version: 31
  # https://en.wikipedia.org/wiki/Debian_version_history
  # Buster
  - distribution: debian
    version: 10
  # Stretch
  - distribution: debian
    version: 9
  # https://en.wikipedia.org/wiki/Ubuntu#Releases
  # 20.04 LTS
  - distribution: ubuntu
    version: focal
  # 18.04 LTS
  - distribution: ubuntu
    version: bionic

before_install:
  # - sudo apt-get update
  # Pull container
  - docker pull ${distribution}:${version}
  # Customize container
  - docker build --no-cache --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests

# before_install:
#   - docker pull ${distribution}:${version}
#   - docker build --no-cache --rm --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests

script:
  - container_id=$(mktemp)
  - docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/ansible-role-jetty:ro ${distribution}-${version}:ansible > "${container_id}"
  - docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/ansible-role-jetty:ro ${distribution}-${version}:ansible > "${container_id}"
  - docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-role-jetty/tests/test.yml --syntax-check
  - docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-role-jetty/tests/test.yml
  - >
    docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-role-jetty/tests/test.yml
    | grep -q -E 'unreachable=0\s+failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - docker rm -f "$(cat ${container_id})"

# script:
#   # Run container in detached state
#   - docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}:ansible "${init}" > "${container_id}"

#   # Syntax check
#   - docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check
#   # Test role
#   - docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
#   # Idempotence test
#   - >
#     docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
#     | grep -q 'failed=0'
#     && (echo 'Idempotence test: pass' && exit 0)
#     || (echo 'Idempotence test: fail' && exit 1)

#     # Clean up
#   - docker stop "$(cat ${container_id})"

# notifications:
#   webhooks: https://galaxy.ansible.com/api/v1/notifications/
