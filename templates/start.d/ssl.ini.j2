#
# WARNING: this file is auto-generated by Ansible CSCfi.jetty role
# DO NOT EDIT
# all local changes will be overwritten!
# ---------------------------------------
# Module: ssl
# Enables a TLS(SSL) Connector on the server.
# This may be used for HTTPS and/or HTTP2 by enabling
# the associated support modules.
# ---------------------------------------
--module=ssl

### TLS(SSL) Connector Configuration

## Connector host/address to bind to
{% if jetty_modules.ssl.host is defined %}
jetty.ssl.host={{ jetty_modules.ssl.host }}
{% else %}
# jetty.ssl.host=0.0.0.0
{% endif %}

## Connector port to listen on
{% if jetty_modules.ssl.port is defined %}
jetty.ssl.port={{ jetty_modules.ssl.port }}
{% else %}
# jetty.ssl.port=8443
{% endif %}

## Connector idle timeout in milliseconds
{% if jetty_modules.ssl.idleTimeout is defined %}
jetty.ssl.idleTimeout={{ jetty_modules.ssl.idleTimeout }}
{% else %}
# jetty.ssl.idleTimeout=30000
{% endif %}

## Number of acceptors (-1 picks default based on number of cores)
{% if jetty_modules.ssl.acceptors is defined %}
jetty.ssl.acceptors={{ jetty_modules.ssl.acceptors }}
{% else %}
# jetty.ssl.acceptors=-1
{% endif %}

## Number of selectors (-1 picks default based on number of cores)
{% if jetty_modules.ssl.selectors is defined %}
jetty.ssl.selectors={{ jetty_modules.ssl.selectors }}
{% else %}
# jetty.ssl.selectors=-1
{% endif %}

## ServerSocketChannel backlog (0 picks platform default)
{% if jetty_modules.ssl.acceptorQueueSize is defined %}
jetty.ssl.acceptorQueueSize={{ jetty_modules.ssl.acceptorQueueSize }}
{% else %}
# jetty.ssl.acceptorQueueSize=0
{% endif %}

## Thread priority delta to give to acceptor threads
{% if jetty_modules.ssl.acceptorPriorityDelta is defined %}
jetty.ssl.acceptorPriorityDelta={{ jetty_modules.ssl.acceptorPriorityDelta }}
{% else %}
# jetty.ssl.acceptorPriorityDelta=0
{% endif %}

## Connect Timeout in milliseconds
{% if jetty_modules.ssl.connectTimeout is defined %}
jetty.ssl.connectTimeout={{ jetty_modules.ssl.connectTimeout }}
{% else %}
# jetty.ssl.connectTimeout=15000
{% endif %}

## Whether SNI is required for all secure connections. Rejections are in TLS handshakes.
{% if jetty_modules.sslContext.sniRequired is defined %}
jetty.sslContext.sniRequired={{ jetty_modules.sslContext.sniRequired }}
{% else %}
# jetty.sslContext.sniRequired=false
{% endif %}

## Whether SNI is required for all secure connections. Rejections are in HTTP 400 response.
{% if jetty_modules.ssl.sniRequired is defined %}
jetty.ssl.sniRequired={{ jetty_modules.ssl.sniRequired }}
{% else %}
# jetty.ssl.sniRequired=false
{% endif %}

## Whether request host names are checked to match any SNI names
{% if jetty_modules.ssl.sniHostCheck is defined %}
jetty.ssl.sniHostCheck={{ jetty_modules.ssl.sniHostCheck }}
{% else %}
# jetty.ssl.sniHostCheck=true
{% endif %}

## max age in seconds for a Strict-Transport-Security response header (default -1)
{% if jetty_modules.ssl.stsMaxAgeSeconds is defined %}
jetty.ssl.stsMaxAgeSeconds={{ jetty_modules.ssl.stsMaxAgeSeconds }}
{% else %}
# jetty.ssl.stsMaxAgeSeconds=31536000
{% endif %}

## include subdomain property in any Strict-Transport-Security header (default false)
{% if jetty_modules.ssl.stsIncludeSubdomains is defined %}
jetty.ssl.stsIncludeSubdomains={{ jetty_modules.ssl.stsIncludeSubdomains }}
{% else %}
# jetty.ssl.stsIncludeSubdomains=true
{% endif %}

### SslContextFactory Configuration
## Note that OBF passwords are not secure, just protected from casual observation
## See http://www.eclipse.org/jetty/documentation/current/configuring-security-secure-passwords.html

## The Endpoint Identification Algorithm
## Same as javax.net.ssl.SSLParameters#setEndpointIdentificationAlgorithm(String)
{% if jetty_modules.sslContext.endpointIdentificationAlgorithm is defined %}
jetty.sslContext.endpointIdentificationAlgorithm={{ jetty_modules.sslContext.endpointIdentificationAlgorithm }}
{% else %}
# jetty.sslContext.endpointIdentificationAlgorithm=
{% endif %}

## SSL JSSE Provider
{% if jetty_modules.sslContext.provider is defined %}
jetty.sslContext.provider={{ jetty_modules.sslContext.provider }}
{% else %}
# jetty.sslContext.provider=
{% endif %}

## Keystore file path (relative to $jetty.base)
{% if jetty_modules.sslContext.keyStorePath is defined %}
jetty.sslContext.keyStorePath={{ jetty_modules.sslContext.keyStorePath }}
{% else %}
# jetty.sslContext.keyStorePath=etc/keystore
{% endif %}

## Truststore file path (relative to $jetty.base)
{% if jetty_modules.sslContext.trustStorePath is defined %}
jetty.sslContext.trustStorePath={{ jetty_modules.sslContext.trustStorePath }}
{% else %}
# jetty.sslContext.trustStorePath=etc/keystore
{% endif %}

## Keystore password
{% if jetty_modules.sslContext.keyStorePassword is defined %}
jetty.sslContext.keyStorePassword={{ jetty_modules.sslContext.keyStorePassword }}
{% else %}
# jetty.sslContext.keyStorePassword=OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4
{% endif %}

## Keystore type and provider
# Jetty's default is JKS
{% if jetty_modules.sslContext.keyStoreType is defined %}
jetty.sslContext.keyStoreType={{ jetty_modules.sslContext.keyStoreType }}
{% else %}
# jetty.sslContext.keyStoreType=JKS
{% endif %}
{% if jetty_modules.sslContext.keyStoreProvider is defined %}
jetty.sslContext.keyStoreProvider={{ jetty_modules.sslContext.keyStoreProvider }}
{% else %}
# jetty.sslContext.keyStoreProvider=
{% endif %}

## KeyManager password
# if PKCS12 is used, then shall match with keyStorePassword
# default:
{% if jetty_modules.sslContext.keyStoreType == "PKCS12" %}
jetty.sslContext.keyManagerPassword={{ jetty_modules.sslContext.keyStorePassword | default("OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4") }}
{% elif jetty_modules.sslContext.keyManagerPassword is defined %}
jetty.sslContext.keyManagerPassword={{ jetty_modules.sslContext.keyManagerPassword }}
{% else %}
# jetty.sslContext.keyManagerPassword=OBF:1u2u1wml1z7s1z7a1wnl1u2g
{% endif %}

## Truststore password
{% if jetty_modules.sslContext.trustStorePassword is defined %}
jetty.sslContext.trustStorePassword={{ jetty_modules.sslContext.trustStorePassword }}
{% else %}
# jetty.sslContext.trustStorePassword=OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4
{% endif %}

## Truststore type and provider
{% if jetty_modules.sslContext.trustStoreType is defined %}
jetty.sslContext.trustStoreType={{ jetty_modules.sslContext.trustStoreType }}
{% else %}
# jetty.sslContext.trustStoreType=JKS
{% endif %}
{% if jetty_modules.sslContext.trustStoreProvider is defined %}
jetty.sslContext.trustStoreProvider={{ jetty_modules.sslContext.trustStoreProvider }}
{% else %}
# jetty.sslContext.trustStoreProvider=
{% endif %}

## whether client certificate authentication is required
{% if jetty_modules.sslContext.needClientAuth is defined %}
jetty.sslContext.needClientAuth={{ jetty_modules.sslContext.needClientAuth }}
{% else %}
# jetty.sslContext.needClientAuth=false
{% endif %}

## Whether client certificate authentication is desired
{% if jetty_modules.sslContext.wantClientAuth is defined %}
jetty.sslContext.wantClientAuth={{ jetty_modules.sslContext.wantClientAuth }}
{% else %}
# jetty.sslContext.wantClientAuth=false
{% endif %}

## Whether cipher order is significant (since java 8 only)
{% if jetty_modules.sslContext.useCipherSuitesOrder is defined %}
jetty.sslContext.useCipherSuitesOrder={{ jetty_modules.sslContext.useCipherSuitesOrder }}
{% else %}
# jetty.sslContext.useCipherSuitesOrder=true
{% endif %}

## To configure Includes / Excludes for Cipher Suites or Protocols see tweak-ssl.xml example at
## https://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#configuring-sslcontextfactory-cipherSuites

## Set the size of the SslSession cache
{% if jetty_modules.sslContext.sslSessionCacheSize is defined %}
jetty.sslContext.sslSessionCacheSize={{ jetty_modules.sslContext.sslSessionCacheSize }}
{% else %}
# jetty.sslContext.sslSessionCacheSize=-1
{% endif %}

## Set the timeout (in seconds) of the SslSession cache timeout
{% if jetty_modules.sslContext.sslSessionTimeout is defined %}
jetty.sslContext.sslSessionTimeout={{ jetty_modules.sslContext.sslSessionTimeout }}
{% else %}
# jetty.sslContext.sslSessionTimeout=-1
{% endif %}

## Allow SSL renegotiation
{% if jetty_modules.sslContext.renegotiationAllowed is defined %}
jetty.sslContext.renegotiationAllowed={{ jetty_modules.sslContext.renegotiationAllowed }}
{% else %}
# jetty.sslContext.renegotiationAllowed=true
{% endif %}
{% if jetty_modules.sslContext.renegotiationLimit is defined %}
jetty.sslContext.renegotiationLimit={{ jetty_modules.sslContext.renegotiationLimit }}
{% else %}
# jetty.sslContext.renegotiationLimit=5
{% endif %}
